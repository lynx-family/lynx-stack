on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: false
env:
  CI: 1
  TURBO_TELEMETRY_DISABLED: 1
jobs:
  get-merge-base:
    runs-on: lynx-ubuntu-24.04-medium
    env:
      # We have 3 cases:
      #   1. Pull request
      #   2. Merge group
      #   3. Push (deploy on main branch)
      BASE_REF: ${{ github.base_ref || github.event.merge_group.base_ref || github.event.push.base_ref }}
      HEAD_REF: ${{ github.head_ref || github.event.merge_group.head_ref || github.ref }}
    outputs:
      merge-base: ${{ steps.merge-base.outputs.merge-base }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.HEAD_REF }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
      # Modified from https://github.com/rmacklin/fetch-through-merge-base
      - name: Fetch
        run: |
          git fetch --progress --depth=1 origin "+refs/heads/$BASE_REF:refs/heads/$BASE_REF"
          while [ -z "$( git merge-base "$BASE_REF" "$HEAD_REF" )" ]; do
            git fetch -q --deepen=10 origin "$BASE_REF" "$HEAD_REF";
          done
      - name: Get merge base
        id: merge-base
        run: |
          echo "merge-base=$(git merge-base origin/${{ env.BASE_REF }} ${{ env.HEAD_REF }} || git rev-parse ${{ env.BASE_REF }})" >> $GITHUB_OUTPUT
  build-all:
    runs-on: lynx-ubuntu-24.04-xlarge
    needs: get-merge-base
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: TurboCache
        uses: lynx-infra/cache@558d7c999f9f97ac02ed7e711503bb81d82ff8ee
        with:
          path: .turbo
          key: turbo-v3-${{ hashFiles('**/packages/**/src/**/*.rs') }}-${{ github.sha }}
          # We can restore caches from
          #   1. Runs in the same PR
          #   2. Previous PRs
          restore-keys: |
            turbo-v3-${{ hashFiles('**/packages/**/src/**/*.rs') }}-${{ needs.get-merge-base.outputs.merge-base }}
            turbo-v3-${{ hashFiles('**/packages/**/src/**/*.rs') }}-${{ github.event.pull_request.base.sha || github.event.merge_group.base_sha || github.event.push.before }}
            turbo-v3-${{ hashFiles('**/packages/**/src/**/*.rs') }}-
      - name: Install
        run: |
          npm install -g corepack@latest
          corepack enable
          pnpm install --frozen-lockfile
      - name: Build
        id: build
        run: |
          pnpm turbo build --summarize
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true
      - name: Upload turbo summary
        if: steps.build.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: turbo-summary-${{ github.sha }}
          path: .turbo/runs/*.json
          retention-days: 1
          overwrite: true
          include-hidden-files: true
      - name: Setup Rust and retry build if failed
        if: steps.build.outcome == 'failure'
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown
          cache-key: test-${{ runner.os }}
      - name: Retry Build
        if: steps.build.outcome == 'failure'
        run: |
          pnpm turbo build --summarize
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload turbo summary
        if: steps.build.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: turbo-summary-retry-${{ github.sha }}
          path: .turbo/runs/*.json
          retention-days: 1
          overwrite: true
          include-hidden-files: true
