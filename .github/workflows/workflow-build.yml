on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: false
    inputs:
      runs-on:
        required: true
        type: string
env:
  CI: 1
  TURBO_TELEMETRY_DISABLED: 1
jobs:
  build-all:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Get pull request head SHA
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && github.event.pull_request.head.sha == ''
        id: head-sha
        with:
          result-encoding: string
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const { data: pullRequest } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: prNumber
            });
            return pullRequest.head.sha;
      - name: Get merge base
        id: merge-base
        env:
          BASE_REF: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha || steps.head-sha.outputs.result || github.event.merge_group.head_sha }}
        run: |
          git fetch origin ${{ env.BASE_REF }}
          echo "merge-base=$(git merge-base --fork-point origin/${{ env.BASE_REF }} ${{ env.HEAD_SHA }} || echo '')" >> $GITHUB_OUTPUT
      - name: TurboCache
        uses: lynx-infra/cache@558d7c999f9f97ac02ed7e711503bb81d82ff8ee
        with:
          path: .turbo
          key: turbo-v3-${{ hashFiles('**/packages/**/src/**/*.rs') }}-${{ github.sha }}
          # We can restore caches from
          #   1. Runs in the same PR
          #   2. Previous PRs
          restore-keys: |
            turbo-v3-${{ hashFiles('**/packages/**/src/**/*.rs') }}-${{ steps.merge-base.outputs.merge-base }}
            turbo-v3-${{ hashFiles('**/packages/**/src/**/*.rs') }}-${{ github.event.pull_request.base.sha || github.event.merge_group.base_sha }}
            turbo-v3-${{ hashFiles('**/packages/**/src/**/*.rs') }}-
      - name: Install
        run: |
          npm install -g corepack@latest
          corepack enable
          pnpm install --frozen-lockfile
      - name: Build
        id: build
        run: |
          pnpm turbo build --summarize
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true
      - name: Setup Rust and retry build if failed
        if: steps.build.outcome == 'failure'
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown
          cache-key: test-${{ runner.os }}
      - name: Retry Build
        if: steps.build.outcome == 'failure'
        run: |
          pnpm turbo build --summarize
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
